# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main



stages:
  - stage: 
    jobs:
      - job: terraform_deployment 
        pool:
          vmImage: ubuntu-latest
        variables:
          az_region: 'East US'
          resource_group_name: 'product-resources'
          subscription: '5b584631-3869-450e-b797-9be9da2276cf'
          # key_vault_name: <key-vault-name>
          # sa_prefix: <service-account-name>
          # sa_container_name: <blob-container-name>
          # tfstateFile: terraform.tfstate
        
        steps:
          - task: AzureCLI@2
            inputs:
                azureSubscription: '5b584631-3869-450e-b797-9be9da2276cf'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                   az group create -n $(resource_group_name) -l $(az_region)
                #   VAULT_ID=$(az keyvault create --name "$(key_vault_name)" --resource-group "$(resource_group_name)" --location "$(az_region)" --query "id" -o tsv)
                #   az storage account create --resource-group $(resource_group_name) --name "$(sa_prefix)" --sku Standard_LRS --encryption-services blob
                #   az storage container create --name $(sa_container_name) --account-name "$(sa_prefix)" --auth-mode login

          - task: TerraformInstaller@0
            displayName: Terraform Installation
            inputs:
             terraformVersion: 'latest'

          - task: TerraformTaskV3@3
            displayName: Terraform Init  
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/main.tf'  

          
          
 
         
        
          - task: TerraformTaskV3@3
            displayName: Terraform Plan
            inputs:
             provider: 'azurerm'
             command: 'plan'
             workingDirectory: '$(System.DefaultWorkingDirectory)/main.tf'
             commandOptions: '-out=tfplan'
            # environmentServiceNameAzureRM: 'akrish-poc-sp'
          
          
          - task: TerraformTaskV3@3
            displayName: Terraform Apply
            inputs:
             provider: 'azurerm'
             command: 'apply'
             workingDirectory: '$(System.DefaultWorkingDirectory)/main.tf'
              #commandOptions: 'tfplan'
              # environmentServiceNameAzureRM: '<service-connection-auth>'
          
         
        
          - task: Kubernetes@1
            inputs:
             connectionType: 'Kubernetes Service Connection'
             kubernetesServiceEndpoint: 'AKS'
             namespace: 'default'
             command: 'set'
             arguments: 'image deployment rest-api basic-rest-api=$(image)'
             secretType: 'dockerRegistry'
             containerRegistryType: 'Azure Container Registry'
             outputFormat: 'none'